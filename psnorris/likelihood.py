import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from scipy.spatial.distance import cdist
from scipy.spatial import distance
from scipy import signal

#cenX = self.parent.pk.iX[np.array(self.parent.pk.peaks[:, 0], dtype=np.int64), np.array(self.parent.pk.peaks[:, 1], dtype=np.int64), np.array(self.parent.pk.peaks[:, 2], dtype=np.int64)] + 0.5
#cenY = self.parent.pk.iY[np.array(self.parent.pk.peaks[:, 0], dtype=np.int64), np.array(self.parent.pk.peaks[:, 1], dtype=np.int64), np.array(self.parent.pk.peaks[:, 2], dtype=np.int64)] + 0.5



#xppk7915 run23 2868 no background subtraction
x = np.array([  759.5,   779.5,   784.5,   785.5,   791.5,   792.5,   795.5,
         801.5,   803.5,   806.5,   818.5,   820.5,   825.5,   832.5,
         832.5,   841.5,   851.5,   861.5,   879.5,   887.5,   900.5,
         900.5,   900.5,   906.5,   911.5,   931.5,   949.5,   953.5,
         969.5,   976.5,   993.5,   997.5,  1001.5,  1006.5,  1009.5,
        1014.5,  1016.5,  1021.5,  1029.5,  1044.5,  1050.5,  1051.5,
        1075.5,  1078.5,  1086.5,  1094.5,  1099.5,  1100.5,  1105.5,
        1106.5,  1119.5,  1123.5,  1127.5,  1130.5,  1133.5,  1134.5,
        1136.5,  1137.5,  1139.5,  1148.5,  1167.5,  1167.5,  1175.5,
        1180.5,  1198.5,  1213.5])

y = np.array([ 1014.5,   876.5,   789.5,   855.5,  1085.5,  1013.5,   913.5,
        1120.5,   869.5,   751.5,  1058.5,  1070.5,  1087.5,  1100.5,
        1171.5,  1143.5,   999.5,  1032.5,   853.5,  1177.5,   784.5,
         834.5,  1136.5,   787.5,  1146.5,  1151.5,  1105.5,   794.5,
        1110.5,   747.5,  1167.5,   788.5,  1089.5,  1105.5,   793.5,
        1162.5,  1079.5,  1095.5,   824.5,  1164.5,   828.5,   803.5,
         814.5,  1072.5,  1053.5,  1061.5,   927.5,  1080.5,  1035.5,
        1039.5,   832.5,   883.5,   974.5,   897.5,  1028.5,  1073.5,
         980.5,  1048.5,  1010.5,  1030.5,   855.5,  1059.5,   818.5,
        1025.5,  1026.5,  1003.5])

#xppk7915 run23 3278
x = np.array([  425.5,   475.5,   539.5,   546.5,   602.5,   619.5,   620.5,
         634.5,   635.5,   637.5,   638.5,   639.5,   645.5,   649.5,
         652.5,   652.5,   652.5,   654.5,   665.5,   668.5,   668.5,
         671.5,   675.5,   679.5,   679.5,   681.5,   682.5,   686.5,
         690.5,   693.5,   699.5,   701.5,   702.5,   708.5,   709.5,
         716.5,   716.5,   730.5,   740.5,   744.5,   751.5,   754.5,
         754.5,   758.5,   767.5,   768.5,   771.5,   777.5,   784.5,
         786.5,   787.5,   791.5,   793.5,   795.5,   796.5,   797.5,
         801.5,   802.5,   806.5,   806.5,   806.5,   808.5,   813.5,
         814.5,   815.5,   819.5,   821.5,   822.5,   823.5,   829.5,
         829.5,   829.5,   833.5,   833.5,   835.5,   842.5,   844.5,
         845.5,   846.5,   848.5,   849.5,   851.5,   851.5,   852.5,
         853.5,   854.5,   855.5,   859.5,   859.5,   859.5,   860.5,
         862.5,   863.5,   863.5,   865.5,   868.5,   876.5,   880.5,
         897.5,   898.5,   902.5,   905.5,   907.5,   910.5,   914.5,
         918.5,   918.5,   925.5,   927.5,   929.5,   930.5,   930.5,
         934.5,   935.5,   944.5,   945.5,   945.5,   950.5,   957.5,
         957.5,   959.5,   960.5,   974.5,   975.5,   979.5,   985.5,
         996.5,  1001.5,  1001.5,  1002.5,  1003.5,  1003.5,  1005.5,
        1006.5,  1011.5,  1014.5,  1014.5,  1015.5,  1016.5,  1018.5,
        1019.5,  1025.5,  1030.5,  1031.5,  1032.5,  1034.5,  1035.5,
        1036.5,  1042.5,  1045.5,  1046.5,  1046.5,  1047.5,  1047.5,
        1053.5,  1058.5,  1060.5,  1062.5,  1071.5,  1075.5,  1076.5,
        1080.5,  1082.5,  1084.5,  1090.5,  1092.5,  1093.5,  1094.5,
        1096.5,  1097.5,  1098.5,  1100.5,  1101.5,  1104.5,  1104.5,
        1110.5,  1116.5,  1118.5,  1119.5,  1119.5,  1121.5,  1126.5,
        1126.5,  1130.5,  1130.5,  1130.5,  1132.5,  1134.5,  1148.5,
        1155.5,  1156.5,  1156.5,  1160.5,  1161.5,  1162.5,  1165.5,
        1169.5,  1177.5,  1177.5,  1180.5,  1181.5,  1182.5,  1183.5,
        1184.5,  1190.5,  1201.5,  1203.5,  1203.5,  1213.5,  1220.5,
        1222.5,  1223.5,  1223.5,  1230.5,  1236.5,  1241.5,  1252.5,
        1260.5,  1262.5,  1266.5,  1274.5,  1276.5,  1281.5,  1286.5,
        1287.5,  1288.5,  1296.5,  1298.5,  1302.5,  1302.5,  1306.5,
        1307.5,  1309.5,  1314.5,  1316.5,  1332.5,  1332.5,  1345.5,
        1366.5,  1367.5,  1372.5]) # pixels
y = np.array([  917.5,  1019.5,   924.5,  1154.5,  1178.5,  1042.5,  1177.5,
        1044.5,  1180.5,   996.5,   883.5,   613.5,  1030.5,  1046.5,
         820.5,   999.5,  1180.5,  1064.5,  1049.5,   824.5,  1002.5,
        1018.5,  1035.5,  1052.5,  1295.5,  1238.5,   828.5,  1021.5,
        1037.5,  1167.5,   594.5,  1024.5,   783.5,   887.5,   667.5,
         787.5,  1029.5,   792.5,   845.5,   797.5,   513.5,   851.5,
         913.5,   802.5,   855.5,  1126.5,   932.5,  1112.5,   875.5,
        1098.5,   951.5,   966.5,   779.5,  1178.5,  1084.5,   878.5,
         898.5,   745.5,   783.5,  1027.5,  1073.5,   986.5,   897.5,
         836.5,   750.5,  1215.5,  1268.5,  1141.5,   716.5,   555.5,
         855.5,   916.5,   656.5,   855.5,   809.5,  1113.5,   531.5,
        1123.5,   663.5,   950.5,  1093.5,   704.5,   959.5,   964.5,
        1237.5,   743.5,  1331.5,   508.5,  1081.5,  1170.5,   994.5,
        1051.5,   833.5,  1009.5,  1275.5,  1156.5,  1142.5,   852.5,
        1086.5,   887.5,  1058.5,  1227.5,  1032.5,   794.5,  1212.5,
         725.5,  1264.5,   815.5,  1248.5,  1106.5,   666.5,  1182.5,
         879.5,   783.5,   712.5,   751.5,  1154.5,   803.5,   868.5,
        1253.5,   694.5,   772.5,  1333.5,  1159.5,  1276.5,   722.5,
        1075.5,   743.5,  1047.5,  1163.5,  1167.5,  1229.5,   637.5,
        1164.5,  1214.5,  1121.5,  1322.5,   764.5,   726.5,  1199.5,
         816.5,  1037.5,   748.5,   709.5,   910.5,  1032.5,   924.5,
        1140.5,   954.5,   768.5,   730.5,   969.5,   691.5,  1097.5,
         623.5,  1159.5,   751.5,   713.5,  1087.5,  1318.5,   734.5,
         839.5,   544.5,  1149.5,  1283.5,   975.5,   823.5,  1198.5,
        1033.5,  1266.5,  1076.5,  1183.5,   650.5,  1250.5,  1305.5,
        1139.5,   673.5,  1008.5,   891.5,  1052.5,  1188.5,   921.5,
        1441.5,   698.5,   936.5,  1142.5,   859.5,   953.5,  1177.5,
         653.5,   968.5,  1132.5,  1102.5,  1028.5,  1073.5,   719.5,
        1181.5,  1135.5,  1461.5,   986.5,  1028.5,  1075.5,   812.5,
         757.5,  1186.5,   987.5,  1030.5,  1078.5,  1191.5,  1143.5,
         990.5,  1035.5,  1112.5,   599.5,  1196.5,   568.5,   535.5,
        1167.5,   977.5,  1071.5,   754.5,  1223.5,   963.5,  1139.5,
        1026.5,  1106.5,  1246.5,   931.5,   846.5,   948.5,   864.5,
        1012.5,  1060.5,   897.5,  1269.5,  1097.5,  1130.5,   680.5,
         949.5,  1264.5,  1017.5]) # pixels

x = np.array([  454.5,   459.5,   463.5,   490.5,   499.5,   507.5,   510.5,
         524.5,   522.5,   524.5,   526.5,   531.5,   536.5,   545.5,
         546.5,   548.5,   548.5,   548.5,   562.5,   563.5,   568.5,
         572.5,   580.5,   580.5,   590.5,   598.5,   601.5,   600.5,
         602.5,   603.5,   605.5,   608.5,   609.5,   609.5,   633.5,
         635.5,   637.5,   641.5,   652.5,   655.5,   664.5,   679.5,
         691.5,   690.5,   692.5,   702.5,   703.5,   708.5,   709.5,
         731.5,   735.5,   740.5,   742.5,   745.5,   747.5,   769.5,
         785.5,   796.5,   802.5,   809.5,   780.5,   803.5,   718.5,
         615.5,   725.5,   718.5,   762.5,   793.5,   675.5,   847.5,
         992.5,  1045.5,   860.5,   892.5,   946.5,   908.5,   968.5,
         931.5,  1092.5,   908.5,   945.5,   987.5,   858.5,  1118.5,
        1078.5,   866.5,  1074.5,  1067.5,   981.5,  1078.5,  1078.5,
        1065.5,  1080.5,   886.5,  1076.5,   922.5,   983.5,   989.5,
        1200.5,  1079.5,  1078.5,  1080.5,   910.5,  1078.5,  1075.5,
         866.5,   971.5,  1096.5,  1065.5,   862.5,  1132.5,  1137.5,
         874.5,  1062.5,  1105.5,  1040.5,  1175.5,   967.5,   892.5,
         943.5,  1106.5,  1039.5,  1101.5,  1193.5,  1136.5,  1196.5,
        1218.5,  1229.5,  1065.5,  1230.5,  1138.5,  1213.5,   844.5,
        1192.5,  1116.5,  1146.5,  1093.5,  1075.5,   978.5,   913.5,
         878.5,  1296.5,  1282.5,  1308.5,  1294.5,  1284.5,  1278.5,
        1271.5,  1271.5,  1266.5,  1266.5,  1257.5,  1232.5,  1221.5,
        1220.5,  1209.5,  1208.5,  1191.5,  1182.5,  1181.5,  1168.5,
        1169.5,  1166.5,  1145.5,  1142.5,  1141.5,  1139.5,  1137.5,
        1135.5,  1133.5,  1105.5,  1094.5,  1091.5,  1088.5,  1085.5,
        1076.5,  1073.5,  1071.5,  1056.5,  1053.5,  1046.5,  1044.5,
        1040.5,  1035.5,  1033.5,  1032.5,  1030.5,  1028.5,  1020.5,
        1014.5,  1007.5,   984.5,   962.5,   954.5,   931.5,   927.5,
         926.5,  1374.5,  1044.5,   950.5,  1044.5,  1088.5,  1023.5,
        1039.5,  1010.5,   845.5,   798.5,   906.5,   805.5,   906.5,
         708.5,   781.5,   780.5,   657.5,   844.5,   805.5,   770.5,
         709.5,   894.5,   835.5,   777.5,   812.5,   830.5,   684.5,
         893.5,   890.5,   848.5,   851.5,   607.5,   720.5,   672.5,
         880.5,   658.5,   765.5,   800.5,   645.5,   702.5,   545.5,
         618.5,   736.5,   590.5,   794.5,   729.5,   718.5,   660.5,
         905.5,   744.5,   548.5,   797.5,   593.5,   664.5,   517.5,
         626.5,   590.5,   397.5,   475.5,   493.5,   497.5,   502.5])
y = np.array([  839.5,   995.5,   889.5,   912.5,   908.5,  1006.5,   842.5,
         864.5,  1091.5,  1038.5,   941.5,  1120.5,  1120.5,  1017.5,
        1029.5,   922.5,   967.5,  1013.5,  1096.5,  1100.5,  1078.5,
        1028.5,   974.5,  1122.5,  1142.5,  1173.5,   881.5,   931.5,
        1128.5,  1134.5,  1223.5,  1030.5,   915.5,   934.5,   879.5,
        1204.5,  1077.5,  1002.5,  1155.5,  1059.5,  1066.5,   858.5,
        1048.5,  1138.5,  1029.5,  1029.5,  1205.5,  1077.5,  1207.5,
        1074.5,  1135.5,  1104.5,  1152.5,  1149.5,  1124.5,  1171.5,
        1104.5,  1215.5,  1174.5,  1163.5,  1465.5,  1342.5,  1328.5,
        1315.5,  1310.5,  1307.5,  1293.5,  1280.5,  1254.5,  1312.5,
        1277.5,  1273.5,  1271.5,  1271.5,  1265.5,  1257.5,  1256.5,
        1253.5,  1253.5,  1232.5,  1230.5,  1223.5,  1222.5,  1219.5,
        1217.5,  1211.5,  1211.5,  1210.5,  1188.5,  1181.5,  1175.5,
        1168.5,  1166.5,  1164.5,  1164.5,  1157.5,  1152.5,  1151.5,
        1149.5,  1148.5,  1147.5,  1145.5,  1143.5,  1141.5,  1113.5,
        1108.5,  1107.5,  1106.5,  1100.5,  1098.5,  1092.5,  1091.5,
        1089.5,  1080.5,  1076.5,  1073.5,  1072.5,  1070.5,  1065.5,
        1055.5,  1045.5,  1038.5,  1036.5,  1030.5,  1026.5,  1026.5,
        1022.5,  1013.5,   995.5,   975.5,   963.5,   955.5,   950.5,
         948.5,   932.5,   932.5,  1434.5,  1400.5,  1391.5,  1415.5,
        1485.5,   927.5,   979.5,   620.5,   892.5,   901.5,   892.5,
         865.5,   852.5,   796.5,   605.5,   696.5,   629.5,   896.5,
         691.5,   622.5,   701.5,   743.5,   803.5,   662.5,   904.5,
         630.5,   517.5,   677.5,   684.5,   645.5,   682.5,   748.5,
         634.5,   653.5,   563.5,   651.5,   680.5,   714.5,   812.5,
         765.5,   663.5,   705.5,   753.5,   715.5,   596.5,   686.5,
         530.5,   757.5,   714.5,   577.5,   615.5,   737.5,   656.5,
         734.5,   572.5,   690.5,   678.5,   560.5,   708.5,   519.5,
         689.5,   677.5,   409.5,   453.5,   458.5,   486.5,   490.5,
         492.5,   496.5,   431.5,   454.5,   463.5,   483.5,   485.5,
         491.5,   499.5,   502.5,   505.5,   514.5,   516.5,   515.5,
         517.5,   525.5,   525.5,   533.5,   537.5,   538.5,   543.5,
         556.5,   556.5,   556.5,   562.5,   572.5,   574.5,   584.5,
         589.5,   591.5,   595.5,   597.5,   596.5,   606.5,   610.5,
         634.5,   637.5,   638.5,   641.5,   643.5,   650.5,   650.5,
         664.5,   676.5,   689.5,   713.5,   761.5,   764.5,   764.5,
         779.5,   385.5,   807.5,   709.5,   801.5,   803.5,   761.5])

#xppk7915 run23 72
x = np.array([  502.5,   507.5,   564.5,   569.5,   582.5,   593.5,   625.5,
         625.5,   650.5,   653.5,   654.5,   675.5,   678.5,   682.5,
         682.5,   704.5,   719.5,   727.5,   740.5,   756.5,   770.5,
         771.5,   776.5,   809.5,   814.5,   831.5,   854.5,   854.5,
         869.5,   870.5,   871.5,   873.5,   888.5,   905.5,   931.5,
         937.5,   947.5,   977.5,   981.5,   990.5,  1024.5,  1037.5,
        1043.5,  1062.5,  1073.5,  1080.5,  1086.5,  1094.5,  1097.5,
        1120.5,  1128.5,  1128.5,  1144.5,  1153.5,  1193.5,  1203.5,
        1234.5,  1241.5,  1249.5,  1285.5,  1286.5,  1301.5,  1396.5,
        1441.5,  1489.5])
y = np.array([  915.5,   984.5,   983.5,   868.5,   746.5,   820.5,   904.5,
         967.5,   555.5,   842.5,   758.5,  1060.5,   744.5,   812.5,
        1310.5,   938.5,   677.5,   786.5,  1240.5,  1200.5,  1315.5,
         851.5,   774.5,  1039.5,  1311.5,   636.5,  1025.5,  1192.5,
        1226.5,   530.5,   872.5,  1011.5,   944.5,   802.5,  1159.5,
        1039.5,  1190.5,  1282.5,  1054.5,   512.5,  1210.5,   722.5,
        1146.5,   702.5,  1102.5,  1312.5,   737.5,  1338.5,  1119.5,
         680.5,   642.5,  1343.5,  1244.5,   679.5,   694.5,   654.5,
        1303.5,   825.5,   980.5,  1273.5,  1060.5,   904.5,   797.5,
        1095.5,   955.5])

pixSize = 89e-6
#pixSize = 100e-6
d = 53.3e-3
#d = 139e-3
z = d/pixSize * np.ones(x.shape) # pixels

wavelength = 12.4/9.5 # Angstrom
#wavelength = 12.4/12.8
norm = np.sqrt(x**2 + y**2 + z**2)
#qPeaks = (np.array([x,y,z])/norm - np.array([[0.],[0.],[1.]])) *z[0]/wavelength #/1.6 + 999./2
qPeaks = np.array([x,y,z])/(wavelength*norm)

selfD = np.sort(distance.cdist(qPeaks.transpose(), qPeaks.transpose(), 'euclidean'))
closestNeighborDist = selfD[:,1]
meanClosestNeighborDist = np.median(closestNeighborDist)
print "meanClosestNeighborDist: ", meanClosestNeighborDist

ind = 15
plt.plot(selfD[ind,:],'x-')
plt.plot(np.ones_like(selfD[ind,:])*meanClosestNeighborDist,'r-')
plt.show()

coords = qPeaks.transpose()
pairsFound = 0.
counter = 0
for p in coords:
    #print "p: ", p
    # flip all
    flip = 2*p - coords
    #print "flip: ", flip
    d = distance.cdist(coords, flip, 'euclidean')
    #print "dist", d.shape
    sortedD = np.sort(d, axis=1)
    #print "sorted: ", sortedD
    sigma = meanClosestNeighborDist / 4 # strict test
    mu = 0.
    bins = sortedD
    vals = np.exp( -(bins - mu)**2 / (2 * sigma**2))
    #print "vals: ", vals
    weight = np.sum( vals ) - 1 # take away self
    #print "weight: ", weight
    pairsFound += weight
    counter += 1
pairsFound = pairsFound / 2
pairsFoundPerSpot = pairsFound/len(x)
print "pairsFoundperSpot: ", pairsFoundPerSpot

fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
ax.scatter(qPeaks[0,:],qPeaks[1,:],qPeaks[2,:])
plt.axis('equal')
plt.title('likelihood: '+str(pairsFoundPerSpot))
plt.show()

from IPython import embed
embed()
exit()

distDet = cdist(np.array([x,y,z]).transpose(),np.array([x,y,z]).transpose())
sortedDet = np.sort(distDet,axis=1)
plt.hist(sortedDet[:,1:2].flatten(),200)#[:,1])
plt.show()

dist = cdist(qPeaks.transpose(),qPeaks.transpose())
sorted = np.sort(dist,axis=1)
plt.hist(sorted[:,1:5].flatten(),200)#[:,1])
plt.show()

exit()



f=abs(np.fft.fft(sorted[:,1:5].flatten()))
plt.plot(f,'x-')
plt.show()

import skimage.feature.peak
pos=skimage.feature.peak.peak_local_max(f,min_distance=40)
plt.plot(f,'x-')
plt.plot(pos,f[pos],'ro')
plt.show()

ff = np.zeros_like(f)
ff[pos] = f[pos]
plt.plot(ff,'x-')
plt.show()

diff=np.array(pos-np.roll(pos,1))[1::]
medianStep = np.median(pos-np.roll(pos,1))

g = abs(np.fft.ifft(f**2))
plt.plot(g,'x-')
plt.show()

sorted = np.sort(dist,axis=1)
plt.plot(sorted[:,1])
plt.show()

#s,u = np.linalg.eig(dist)
#sorted = np.sort(dist.flatten())
#plt.hist(sorted,400)
#plt.show()

#qPeaks = qPeaks.astype(int)

#myBox = np.zeros((1000,1000,1000))
#for i in range(qPeaks.shape[1]):
#    myBox[qPeaks[0,i],qPeaks[1,i],qPeaks[2,i]] = 1
#FS = np.fft.fftn(myBox)
#PS = abs(FS)**2
#auto = abs(np.fft.ifftn(PS))








from IPython import embed
embed()







